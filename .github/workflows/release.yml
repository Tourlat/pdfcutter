name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            ext: ""
          - target: x86_64-pc-windows-gnu
            ext: ".exe"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-rust@v2
        with:
          rust-version: stable

      - name: Add Windows target
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create or update release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --repo="${{ github.repository }}" \
            --title="PDF Cutter ${TAG#v}" \
            --generate-notes \
            || echo "Release already exists"

      - name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" \
            "target/${{ matrix.target }}/release/pdf-cutter${{ matrix.ext }}" \
            --repo="${{ github.repository }}" \
            --clobber
